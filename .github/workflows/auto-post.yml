name: ‚úÖ Auto Blog Post Generator

on:
  workflow_dispatch:
  schedule:
    - cron: "*/30 * * * *"

jobs:
  generate-blog:
    name: Generate AI Blog
    runs-on: ubuntu-latest

    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      GIT_EMAIL: ${{ secrets.GIT_EMAIL }}
      GIT_NAME: ${{ secrets.GIT_NAME }}
      GH_USER: ${{ secrets.GH_USER }}
      GH_REPO_NAME: ${{ secrets.GH_REPO_NAME }}
      GH_TOKEN: ${{ secrets.GH_TOKEN }}

    steps:
      - name: Step 1 - Checkout Repo
        uses: actions/checkout@v3

      - name: Step 2 - Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Step 3 - Install Dependencies
        run: npm install

      - name: Step 4 - Generate Blog Post
        run: |
          echo "üß† Running blog post generator..."
          node scripts/fetchAndGenerate.mjs

      - name: Step 5 - Show New Files
        run: |
          echo "üìù Markdown files:"
          ls -lh content/posts || echo "‚ö†Ô∏è No posts"
          echo "üñºÔ∏è Images:"
          ls -lh content/images || echo "‚ö†Ô∏è No images"
          
     - name: üïµÔ∏è Debug:  repo URL
        run: |
          echo "GH_USER: '${GH_USER}'"
          echo "GH_REPO_NAME: '${GH_REPO_NAME}'"
          echo "GH_TOKEN length: ${#GH_TOKEN}"
          echo "Final Repo URL:"
          echo "https://${GH_USER}:${GH_TOKEN}@github.com/${GH_USER}/${GH_REPO_NAME}.git"

      - name: Step 6 - Git Commit & Push with PAT
        run: |
          echo "üîê Setting up Git..."
          git config --global user.email "$GIT_EMAIL"
          git config --global user.name "$GIT_NAME"

          git add content/posts/*.md 2>/dev/null || echo "‚ö†Ô∏è No markdown files"
          git add content/images/*.png 2>/dev/null || echo "‚ö†Ô∏è No image files"
          git add logs/*.log 2>/dev/null || echo "‚ö†Ô∏è No logs"

          if git diff --cached --quiet; then
            echo "üü° Nothing to commit"
          else
            git commit -m "ü§ñ New AI post: $(date)"

            REPO_URL="https://${GH_USER}:${GH_TOKEN}@github.com/${GH_USER}/${GH_REPO_NAME}.git"
            echo "üîç Repo URL (masked): ${REPO_URL/github.com/****.com}"

            git remote set-url origin "$REPO_URL"
            git remote -v

            git push origin HEAD:main || {
              echo "‚ùå Git push failed"
              exit 1
            }
          fi
